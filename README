**Resume Generator PDF**

This Python script generates a **professional resume** in PDF format using the `argparse` and `FPDF` libraries. It allows for **customization** of font size, font color, and background color, and organizes sections like **Education**, **Projects**, **Experience**, **Skills**, and **Extracurricular Activities**.

---

**Features**

- **Customizable Font Size, Font Color, and Background Color**
- Sections include:
  - **Education**
  - **Projects**
  - **Experience**
  - **Skills**
  - **Extracurricular Activities**
- **Table Format** for education details.
- **Bullet Points** for project and experience descriptions.

---

**Prerequisites**

- **Python 3.x** installed on your system.
- Required Python packages:
  - `argparse` (for parsing command-line arguments)
  - `fpdf` (for generating PDF files)
**Install Dependencies**
```bash
pip install fpdf
```

---

**Usage**

You can run the script using the following **command-line arguments**:

**Command-Line Arguments**
- `--font-size`: Font size for the text (**default: 14**).
- `--font-color`: Font color in hex format (**default: #000000**).
- `--background-color`: Background color in hex format (**default: #FFFFFF**).

**Example**
```bash
python resume_generator.py --font-size 16 --font-color "#333333" --background-color "#F0F0F0"
```

---
**Data Structure**

The resume content is stored in a Python dictionary named `resume_data`. Below is an example of how the data should be structured:

```python
resume_data = {
    "name": "Jane Doe",
    "contact": "Email: jane.doe@example.com | Phone: 987-654-3210",
    "education": [
        ["ABC High School", "2018", "9.8/10"],
        ["DEF Senior School", "2020", "9.6/10"],
        ["XYZ University", "2025", "9.2/10"]
    ],
    "projects": [
        {
            "title": "Expense Tracker App",
            "details": [
                "Built a full-stack web application using React and Node.js to track expenses.",
                "Deployed on AWS and used by 500+ users."
            ]
        }
    ],
    "experience": [
        {
            "title": "Software Engineering Intern at XYZ Corp",
            "details": [
                "Developed a feature to improve user onboarding, reducing drop-off by 15%.",
                "Collaborated with a team to redesign the UI, improving user satisfaction scores."
            ]
        }
    ],
    "skills": "- Python\n- Web Development (React, Node.js)\n- Database Management (MySQL)",
    "extracurriculars": "- Member of University Coding Club\n- Volunteer at Local Animal Shelter"
}
```

**Customizing the Data**
Edit the `resume_data` dictionary in the script to add **your own information**.

---

**Output**

The generated resume will be saved in the current directory as `sample_resume.pdf`.

---

**Example Output**

Below is an example structure of the resume:

- **Name**: Jane Doe
- **Contact**: Email and Phone Number
- **Education**: Tabular format with columns for Institution Name, Year, and CGPA.
- **Projects**:
  - Project Title
    - Bullet points describing details.
- **Experience**:
  - Job Title
    - Bullet points describing responsibilities and achievements.
- **Skills**: Listed in a simple bullet-point format.
- **Extracurricular Activities**: Listed in a simple bullet-point format.

---

 **License**

This project is licensed under the **MIT License**. See the [LICENSE](LICENSE) file for more details.

---

This README is fully formatted for GitHub, including **headings**, **code blocks**, and **bolded sections** for better visibility. Let me know if you need further tweaks!
